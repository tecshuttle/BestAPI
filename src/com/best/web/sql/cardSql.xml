<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cardSql">

    <!-- 卡类型 -->
    <select id="findCardTypeList" resultType="CardType">
		select card.*, company.company_name
		from XZH_CARD card
		left join pf_company2 company on card.company_id = company.id
	</select>

    <select id="findCardTypeById" parameterType="String" resultType="CardType">
		select * from XZH_CARD where id = #{id}
	</select>

    <select id="findMaxCardSn" parameterType="Map" resultType="CardType">
        select * from (
            select card_no, SUBSTR(card_no, #{card_no_prefix_length}) as max_sn from xzh_card_no where card_no like #{card_no_prefix} || '%' order by max_sn desc
        ) where rownum = 1
	</select>

    <select id="findCardTypeListByCompany" parameterType="String" resultType="CardType">
		select card.*, company.company_name
		from XZH_CARD card
		left join pf_company2 company on card.company_id = company.id
		where card.company_id = #{company_id}
	</select>

    <insert id="insertCardType" parameterType="CardType">
		insert into xzh_card
		( id, card_name, card_code, active_flag, card_type, status, company_id, intro, logo_img, use_rule,
		  package_total, select_count, allow_change_count, card_no_length, card_code_length, card_no_prefix,
		  card_no_sn_length, valid_date_type, valid_date_value, company_abbr, city_select, price
		 )
		values 
		( sys_guid(), #{card_name}, #{card_code}, #{active_flag}, #{card_type}, #{status}, #{company_id}, #{intro},
          #{logo_img}, #{use_rule}, #{package_total}, #{select_count}, #{allow_change_count}, #{card_no_length},
          #{card_code_length}, #{card_no_prefix}, #{card_no_sn_length}, #{valid_date_type}, #{valid_date_value},
          #{company_abbr}, #{city_select}, #{price} )
	</insert>

    <update id="updateCardType" parameterType="CardType">
		update xzh_card
		   set card_name = #{card_name},
		       card_code = #{card_code},
		       active_flag = #{active_flag},
		       card_type = #{card_type},
		       status = #{status},
		       company_id = #{company_id},
		       intro = #{intro},
		       logo_img = #{logo_img},
		       use_rule = #{use_rule},
		       package_total = #{package_total},
		       select_count = #{select_count},
		       allow_change_count = #{allow_change_count},
		       card_no_length = #{card_no_length},
		       card_code_length = #{card_code_length},
		       card_no_prefix = #{card_no_prefix},
		       card_no_sn_length = #{card_no_sn_length},
		       valid_date_type = #{valid_date_type},
		       valid_date_value = #{valid_date_value},
		       company_abbr = #{company_abbr},
		       city_select = #{city_select},
		       price = #{price}
		 where id = #{id}
	</update>

    <update id="deleteCardType">
		update xzh_Users
		   set modifier = null,
		       modify_date = sysdate,
		       active_flag = '0'
		 where id = #{id}
	</update>


    <!-- 卡号管理 -->
    <select id="findCardNoList" resultType="CardNo">
		select no.*, company.company_name from xzh_card_no no left join pf_company2 company on no.dept_id = company.id
	</select>

	<select id="findCardNoListByBatchId" parameterType="String" resultType="CardNo">
		select no.*, company.company_name from xzh_card_no no
		left join pf_company2 company on no.dept_id = company.id
		where no.batch_id = #{batch_id}
	</select>


    <insert id="insertCardNo" parameterType="CardNo">
		insert into xzh_card_no
		( id, active_flag, card_id, card_no, card_code, card_no_type, open_date, close_date, status,
		  verify_count, rel_order_id, dept_id, dept2_id, memo, batch_id
        )
		values
		( sys_guid(), #{active_flag}, #{card_id}, #{card_no}, #{card_code}, #{card_no_type},
		  to_date(#{open_date},'yyyy/mm/dd HH24:MI:SS'), to_date(#{close_date},'yyyy/mm/dd HH24:MI:SS'),
		  #{status}, #{verify_count}, #{rel_order_id}, #{dept_id}, #{dept2_id}, #{memo}, #{batch_id}
		)
	</insert>


    <update id="updateCardNo" parameterType="CardNo">
		update xzh_card_no
		set active_flag = #{active_flag},
		    card_no = #{card_no},
		    card_code = #{card_code},
		    card_no_type = #{card_no_type},
		    open_date = to_date(#{open_date},'yyyy/mm/dd HH24:MI:SS'),
		    close_date = to_date(#{close_date},'yyyy/mm/dd HH24:MI:SS'),
		    status = #{status},
		    verify_count = #{verify_count},
		    rel_order_id = #{rel_order_id},
		    dept_id = #{dept_id},
		    memo = #{memo}
		where id = #{id}
	</update>

    <update id="deleteCardNo">
		update xzh_Users
		set modifier = null,
		modify_date = sysdate,
		active_flag = '0'
		where id = #{id}
	</update>


	<!-- 卡号生成 -->
	<select id="findCardNoGenBatchList" resultType="CardNoGenBatch">
		select gen.*, card.card_name, company.company_name from xzh_card_no_gen_batch gen
        left join xzh_card card on gen.card_id = card.id
        left join pf_company2 company on card.company_id = company.id
	</select>


	<insert id="insertCardNoGenBatch" parameterType="CardNoGenBatch">
		insert into xzh_card_no_gen_batch
		( id, card_id, card_no_area, card_type, batch_no, proposer, gen_quantity, memo )
		values
		( #{id}, #{card_id}, #{card_no_area}, #{card_type}, #{batch_no}, #{proposer}, #{gen_quantity}, #{memo} )
	</insert>


	<update id="updateCardNoGenBatch" parameterType="CardNoGenBatch">
		update xzh_card_no_gen_batch
		set card_id = #{card_id},
		card_no_area = #{card_no_area},
		card_type = #{card_type},
		batch_no = #{batch_no},
		proposer = #{proposer},
		gen_quantity = #{gen_quantity},
		memo = #{memo}
		where id = #{id}
	</update>


    <!-- 卡套餐管理 -->
    <select id="findCardPackageList" resultType="CardPackage">
		select package.*, card.card_name from xzh_card_package package left join xzh_card card on package.card_id = card.id
	</select>

    <select id="findCardPackageListByCardId" parameterType="String" resultType="CardPackage">
		select package.*, card.card_name
		from xzh_card_package package
		left join xzh_card card on package.card_id = card.id
		where card_id = #{card_id} order by seq ASC
	</select>

    <insert id="insertCardPackage" parameterType="CardPackage">
		insert into xzh_card_package
		( id, active_flag, card_id, package_name, package_code, sex_select, dtl_count, intro, price )
		values
		( sys_guid(), #{active_flag}, #{card_id}, #{package_name}, #{package_code}, #{sex_select},
          #{dtl_count}, #{intro}, #{price}
        )
	</insert>

    <update id="updateCardPackage" parameterType="CardPackage">
		update xzh_card_package
		set active_flag = #{active_flag},
		    card_id = #{card_id},
		    package_name = #{package_name},
		    package_code = #{package_code},
		    sex_select = #{sex_select},
		    dtl_count = #{dtl_count},
		    intro = #{intro},
		    price = #{price}
		where id = #{id}
	</update>

    <update id="deleteCardPackage">
		update xzh_card_package
		set modifier = null,
		modify_date = sysdate,
		active_flag = '0'
		where id = #{id}
	</update>


    <!-- 卡套餐服务管理 -->
    <insert id="insertCardPackageDtl" parameterType="CardPackageDtl">
		insert into xzh_card_package_dtl
		( id, package_id, service_id )
		values
		( sys_guid(), #{package_id}, #{service_id} )
	</insert>

    <update id="updateCardPackageDtl" parameterType="CardPackageDtl">
		update xzh_card_package_dtl
		set package_id = #{package_id},
		    service_id = #{service_id}
		where id = #{id}
	</update>
</mapper>